# ~/.config/aerospace/aerospace.toml
# Configuration file for AeroSpace Tiling Window Manager for macOS
# Version in use: 0.18.2-Beta

# -----------------------------------------------------------------------------
# General Settings
# -----------------------------------------------------------------------------

# Auto-start AeroSpace at login using macOS launchd.
# Set to 'false' to disable.
# Using launchd is recommended for reliability.
start-at-login = true

# Normalization helps maintain clean and predictable container structures.
# enable-normalization-flatten-containers: Removes redundant intermediate containers.
enable-normalization-flatten-containers = true
# enable-normalization-opposite-orientation-for-nested-containers: Automatically switches
# between horizontal and vertical layouts for nested containers, optimizing space.
enable-normalization-opposite-orientation-for-nested-containers = true

# -----------------------------------------------------------------------------
# Layout Behavior
# -----------------------------------------------------------------------------

# Default layout for new workspaces or empty monitors. Options: 'tiles', 'accordion', 'auto'.
default-root-container-layout = 'tiles'

# Default orientation for the 'tiles' layout. 'auto' adjusts based on monitor aspect ratio.
# Options: 'horizontal', 'vertical', 'auto'.
default-root-container-orientation = 'auto'

# Padding between windows in the accordion layout.
accordion-padding = 30

# -----------------------------------------------------------------------------
# Event-Driven Actions
# -----------------------------------------------------------------------------
# Execute commands when specific events occur.
# 'move-mouse monitor-lazy-center': When focus switches to a different monitor,
# move the mouse cursor to the center of that monitor only if it's not already there.
# NOTE: This must be a top-level setting, not inside other sections like [key-mapping].
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# -----------------------------------------------------------------------------
# Application Specific Rules (Uncomment Block and Desired Rules to Enable)
# -----------------------------------------------------------------------------
# Define rules for how specific application windows should behave when detected.
# IMPORTANT: Verify 'app-id' (Bundle ID) values for your specific installations!
# Use: mdls -name kMDItemCFBundleIdentifier /path/to/app.app
# Optional use: osascript -e 'id of app "App Name"'
# Place this entire block as a top-level setting in the file.
on-window-detected = [
    # --- Utilities / Windows to Float ---
    { if.app-id = 'io.balena.etcher', run = 'layout floating' },                                 # BalenaEtcher
    { if.app-id = 'com.macpaw.CleanMyMac5', run = 'layout floating' },                           # CleanMyMac
    { if.app-id = 'com.ledger.live', run = 'layout floating' },                                  # Ledger Live
    { if.app-id = 'ch.protonvpn.mac', run = 'layout floating' },                                 # Proton VPN
    { if.app-id = 'me.proton.pass.electron', run = 'layout floating' },                          # Proton Pass
    { if.app-id = 'org.prismlauncher.PrismLauncher', run = 'layout floating' },                  # PrismLauncher
    { if.app-id = 'io.raindrop.macapp', run = 'layout floating' },                               # Raindrop.io
    { if.app-id = 'com.panic.Transmit', run = 'layout floating' },                               # Transmit
    { if.app-id = 'io.robbie.HomeAssistant', run = 'layout floating' },                          # Home Assistant
    { if.app-id = 'com.macappstuff.rename', run = 'layout floating' },                           # Rename
    { if.app-id = 'com.apple.TestFlight', run = 'layout floating' },                             # Test Flight
    { if.app-id = 'cx.c3.theunarchiver', run = 'layout floating' },                              # The Unarchiver
    { if.app-id = 'com.blackmagic-design.DaVinciResolveLite', run = 'layout floating' },         # DaVinci Resolve
    { if.app-id = 'com.blackmagic-design.switchers.softwarecontrol', run = 'layout floating' },  # ATEM Software Control
    { if.app-id = 'com.microsoft.rdc.macos', run = 'layout floating' },                          # Windows App (VNC/RDP)
    { if.app-id = 'com.apple.AppStore', run = 'layout floating' },                               # Apple AppStore
    { if.app-id = 'com.apple.ActivityMonitor', run = 'layout floating' },                        # Apple Activity Monitor
    { if.app-id = 'com.apple.finder', run = 'layout floating' },                                 # Apple Finder
    # --- Apps options to Float ---
    # { if.app-id = 'com.brave.Browser', run = 'layout floating' },                              # Brave Browser
    # { if.app-id = 'md.obsidian', run = 'layout floating' },                                    # Obsidian

    # --- Move apps to specific Workspaces ---
    # --- Workspace 1: web ---
    { if.app-id = 'ai.perplexity.mac', run = 'move-node-to-workspace web' },                     # Perplexity -> web
    # --- Workspace 2: code ---
    { if.app-id = 'com.microsoft.VSCode', run = 'move-node-to-workspace code' },                 # VS Code -> code
    # --- Workspace 4: comms ---
    { if.app-id = 'org.whispersystems.signal-desktop', run = 'move-node-to-workspace comms' },   # Signal -> comms
    { if.app-id = 'org.telegram.desktop', run = 'move-node-to-workspace comms' },                # Telegram Desktop -> comms
    { if.app-id = 'com.hnc.Discord', run = 'move-node-to-workspace comms' },                     # Discord -> comms
    { if.app-id = 'ch.protonmail.desktop', run = 'move-node-to-workspace comms' },               # Proton Mail -> comms
    # --- Workspace 5: docs ---
    { if.app-id = 'org.zotero.zotero', run = 'move-node-to-workspace docs' },                    # Zotero -> docs
    { if.app-id = 'com.apple.iWork.Keynote', run = 'move-node-to-workspace docs' },              # Keynote -> docs
    { if.app-id = 'com.apple.iWork.Pages', run = 'move-node-to-workspace docs' },                # Pages -> docs
    { if.app-id = 'com.apple.iWork.Numbers', run = 'move-node-to-workspace docs' },              # Numbers -> docs
    { if.app-id = 'com.microsoft.Excel', run = 'move-node-to-workspace docs' },                  # Excel -> docs
    { if.app-id = 'com.microsoft.PowerPoint', run = 'move-node-to-workspace docs' },             # Powerpoint -> docs
    { if.app-id = 'com.microsoft.Word', run = 'move-node-to-workspace docs' },                   # Word -> docs
    { if.app-id = 'com.google.drivefs.shortcuts.sheets', run = 'move-node-to-workspace docs' },  # Sheets -> docs
    { if.app-id = 'com.google.drivefs.shortcuts.slides', run = 'move-node-to-workspace docs' },  # Slides -> docs
    { if.app-id = 'com.google.drivefs.shortcuts.docs', run = 'move-node-to-workspace docs' },    # Docs -> docs
    # --- Workspace 6: media ---
    { if.app-id = 'com.apple.ibooks', run = 'move-node-to-workspace media' },                    # Apple Books --> media
    { if.app-id = 'com.apple.podcasts', run = 'move-node-to-workspace media' },                  # Apple Podcasts --> media
    { if.app-id = 'com.apple.TV', run = 'move-node-to-workspace media' },                        # Apple TV --> media
    { if.app-id = 'net.filebot.FileBot', run = 'move-node-to-workspace media' },                 # Filebot -> media
    { if.app-id = 'com.nightbirdsevolve.Meta', run = 'move-node-to-workspace media' },           # Meta (Music Tagger) --> media
    { if.app-id = 'net.cecinestpasparis.yomu', run = 'move-node-to-workspace media' },           # Yomu Ebook Reader -> media
    { if.app-id = 'tv.plex.desktop', run = 'move-node-to-workspace media' },                     # Plex Client -> media
    { if.app-id = 'tv.plex.plexamp', run = 'move-node-to-workspace media' },                     # Plexamp -> media
    { if.app-id = 'com.roon.Roon', run = 'move-node-to-workspace media' },                       # Roon -> media
    { if.app-id = 'org.videolan.vlc', run = 'move-node-to-workspace media' },                    # VLC -> media
    { if.app-id = 'com.firecore.infuse', run = 'move-node-to-workspace media' },                 # Infuse -> media
    { if.app-id = 'com.apple.Music', run = 'move-node-to-workspace media' },                     # Apple Music -> media    
    # --- Workspace 7: files ---
    { if.app-id = 'ch.protonmail.drive', run = 'move-node-to-workspace files' },                 # Proton Drive -> files
    # --- Workspace 8: games ---
    { if.app-id = 'com.mojang.minecraftlauncher', run = 'move-node-to-workspace games' },        # Minecraft Launcher -> games
    { if.app-id = 'com.valvesoftware.steam', run = 'move-node-to-workspace games' },             # Steam -> games
    # --- Workspace 9: design ---
    { if.app-id = 'com.cindori.Backdrop', run = 'move-node-to-workspace design' },               # Backrdop -> design
    { if.app-id = 'com.pixelmatorteam.pixelmator.x', run = 'move-node-to-workspace design' },    # Pixelmator Pro -> design
]

# -----------------------------------------------------------------------------
# Keyboard Mapping
# -----------------------------------------------------------------------------
# Configures how keyboard input is interpreted.
[key-mapping]
    # Explicitly set the keyboard layout preset.
    # NOTE: AeroSpace version (0.18.2-Beta) did not recognize 'qwertz' or
    #       'macos-keyboard-layout-id = true'. I am using 'qwerty' as the
    #       closest supported alternative for my German layout. Most keys
    #       should map correctly, but please double-check symbols if needed.
    preset = 'qwerty'
    # NOTE: The following setting was not recognized in v0.18.2-Beta, keep it commented out
    # macos-keyboard-layout-id = true

# -----------------------------------------------------------------------------
# Gaps Configuration
# -----------------------------------------------------------------------------
# Defines spacing around and between windows.
[gaps]
    # Space between adjacent tiled windows.
    inner.horizontal = 10
    inner.vertical =   10

    # Space between the outermost windows and the screen edges.
    # Ensure these are numbers (Integers), not strings (no quotes needed).
    outer.left =       10
    outer.bottom =     10
    outer.top =        10
    outer.right =      10

# -----------------------------------------------------------------------------
# Mode 'main': Default Bindings
# -----------------------------------------------------------------------------
# Keybindings active in the standard operating mode.
[mode.main.binding]
    # --- Layout Switching ---
    # Cycle through tiling orientations (horizontal/vertical/auto)
    alt-slash = 'layout tiles horizontal vertical' # '/' is Alt+Shift+7 on German layout
    # Switch to accordion layout
    alt-comma = 'layout accordion'

    # --- Focus Control (Vim-style HJKL -- Alternative) ---
    # alt-h = 'focus left'    # Focus window to the left
    # alt-j = 'focus down'    # Focus window below
    # alt-k = 'focus up'      # Focus window above
    # alt-l = 'focus right'   # Focus window to the right

    # --- Focus Control (Arrow Keys) ---
    alt-left = 'focus left'   # Focus window to the left
    alt-down = 'focus down'   # Focus window below
    alt-up = 'focus up'     # Focus window above
    alt-right = 'focus right'  # Focus window to the right

    # --- Window Movement (Vim-style HJKL - Alternative) ---
    # alt-shift-h = 'move left'    # Move focused window left
    # alt-shift-j = 'move down'    # Move focused window down
    # alt-shift-k = 'move up'      # Move focused window up
    # alt-shift-l = 'move right'   # Move focused window right

    # --- Window Movement (Arrow Keys) ---
    alt-shift-left = 'move left'   # Move focused window left
    alt-shift-down = 'move down'   # Move focused window down
    alt-shift-up = 'move up'     # Move focused window up
    alt-shift-right = 'move right'  # Move focused window right

    # --- Workspace Switching (Using Refined Names & Alt+Cmd Modifier) ---
    alt-cmd-1 = 'workspace web'     # Browsers, AI Search
    alt-cmd-2 = 'workspace code'    # Code Editors
    alt-cmd-3 = 'workspace term'    # Terminals
    alt-cmd-4 = 'workspace comms'   # Chat, Mail
    alt-cmd-5 = 'workspace docs'    # Notes, Office, PDF, eBooks
    alt-cmd-6 = 'workspace media'   # Music, Video Players
    alt-cmd-7 = 'workspace files'   # File Sync/Transfer Apps
    alt-cmd-8 = 'workspace games'   # Game Launchers, Games
    alt-cmd-9 = 'workspace design'  # Graphics, Video Editing
    alt-cmd-0 = 'workspace misc'    # Miscellaneous Tasks

    # --- Moving Window to Workspace (Using Refined Names & Alt+Shift Modifier) ---
    # IMPORTANT: Use the exact same names as defined above for consistency.
    alt-shift-1 = 'move-node-to-workspace web'
    alt-shift-2 = 'move-node-to-workspace code'
    alt-shift-3 = 'move-node-to-workspace term'
    alt-shift-4 = 'move-node-to-workspace comms'
    alt-shift-5 = 'move-node-to-workspace docs'
    alt-shift-6 = 'move-node-to-workspace media'
    alt-shift-7 = 'move-node-to-workspace files'
    alt-shift-8 = 'move-node-to-workspace games'
    alt-shift-9 = 'move-node-to-workspace design'
    alt-shift-0 = 'move-node-to-workspace misc'

    # --- Window State Management ---
    alt-f = 'layout floating tiling'         # Toggle floating state for the focused window
    alt-shift-f = 'macos-native-fullscreen'  # Toggle native macOS fullscreen for the focused window
    alt-shift-c = 'close'                    # Close the focused window

    # --- Mode Switching ---
    # Enter the 'resize' mode defined below.
    alt-r = 'mode resize'

    # --- AeroSpace Actions ---
    # Reload the configuration file without restarting AeroSpace. Very useful for testing changes.
    alt-shift-r = 'reload-config'

    # Quit AeroSpace (Binding Disabled).
    # NOTE: The 'exec' command is not recognized in my AeroSpace version (0.18.2-Beta).
    #       This binding is commented out. You need to quit via other means (e.g., killall).
    #       If you update AeroSpace to a newer stable version, you can likely uncomment this
    #       using the list syntax shown below.
    # alt-shift-q = ['exec', '/usr/bin/killall', 'AeroSpace']

# -----------------------------------------------------------------------------
# Mode 'resize': Window Resizing Bindings
# -----------------------------------------------------------------------------
# Keybindings active only after pressing 'alt-r' (or your chosen binding) to enter resize mode.
[mode.resize.binding]
    # --- Resizing Actions (Vim-style HJKL) ---
    # Resize the focused window edge.
    h = 'resize width -50'  # Decrease width by 50 pixels
    j = 'resize height +50' # Increase height by 50 pixels
    k = 'resize height -50' # Decrease height by 50 pixels
    l = 'resize width +50'  # Increase width by 50 pixels

    # --- Resizing Actions (Arrow Keys - Alternative, uncomment if desired) ---
    # If you prefer arrows for resizing, uncomment these lines.
    # left = 'resize width -50'
    # down = 'resize height +50'
    # up = 'resize height -50'
    # right = 'resize width +50'

    # --- Smart Resizing ---
    # 'smart' resize attempts to expand/shrink towards the next adjacent window or monitor edge.
    minus = 'resize smart -50' # Make window smaller towards neighbor/edge
    equal = 'resize smart +50' # Make window bigger towards neighbor/edge (uses '=' key)

    # --- Exit Resize Mode ---
    # Return to the 'main' mode.
    # NOTE: Use 'esc', as 'escape' was not recognized in earlier tests.
    esc = 'mode main'   # Exit resize mode using Escape key
    enter = 'mode main' # Exit resize mode using Enter key
